// <auto-generated />
using Graduation.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Graduation.Core.Sqlite.Migrations.Education
{
    [DbContext(typeof(EducationContext))]
    [Migration("20210601230157_ExamAids")]
    partial class ExamAids
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("Graduation.Core.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultTitle")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("edu_Abilities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "vision",
                            DefaultDescription = "η ικανότητα ενός ατόμου να αναγνωρίζει και να διαβάζει χωρίς τη χρήση τεχνολογίας.",
                            DefaultTitle = "Όραση"
                        },
                        new
                        {
                            Id = 2,
                            Code = "hearing",
                            DefaultDescription = "η ικανότητα του ατόμου να ακούει κάποιο συνομιλητή και να αντιλαμβάνεται ακουστικά σήματα.",
                            DefaultTitle = "Ακοή"
                        },
                        new
                        {
                            Id = 3,
                            Code = "speech",
                            DefaultDescription = "η δυνατότητα του ατόμου να ομιλεί με κάποιο συνομιλητή.",
                            DefaultTitle = "Ομιλία"
                        },
                        new
                        {
                            Id = 4,
                            Code = "stretching",
                            DefaultDescription = "η δυνατότητα του ατόμου να εκτελεί αυτές τις ενέργειες με το επάνω μέρος του σώματος έχοντας ταυτόχρονα καλό έλεγχο της δύναμής του.",
                            DefaultTitle = "Τέντωμα και Φτάσιμο"
                        },
                        new
                        {
                            Id = 5,
                            Code = "dexterity",
                            DefaultDescription = "η ικανότητα του ατόμου να πιάνει κάτι, να κρατάει κάτι, να μεταφέρει, να στριφογυρίζει κάτι και να γράφει.",
                            DefaultTitle = "Επιδεξιότητα"
                        },
                        new
                        {
                            Id = 6,
                            Code = "movement",
                            DefaultDescription = "η ικανότητα ενός ατόμου για βηματισμό, να ανεβαίνει σκάλες, για σκαρφάλωμα, για σκύψιμο και για ισορροπία, χωρίς τη χρήση βοηθημάτων.	",
                            DefaultTitle = "Μετακίνηση"
                        },
                        new
                        {
                            Id = 7,
                            Code = "understanding",
                            DefaultDescription = "η δυνατότητα του ατόμου για κατανόηση του προφορικού και γραπτού λόγου.",
                            DefaultTitle = "Κατανόηση"
                        });
                });

            modelBuilder.Entity("Graduation.Core.AbilityLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AbilityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("LanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AbilityId");

                    b.HasIndex("LanguageId", "AbilityId")
                        .IsUnique();

                    b.ToTable("edu_AbilityLocalizations");
                });

            modelBuilder.Entity("Graduation.Core.Data.DisabilityAid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultTitle")
                        .HasColumnType("TEXT");

                    b.Property<int>("DisabilityAidType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("edu_DisabilityAids");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "HearingAid",
                            DefaultTitle = "ακουστικό βαρηκοΐας",
                            DisabilityAidType = 0
                        },
                        new
                        {
                            Id = 2,
                            Code = "wheelchair",
                            DefaultTitle = "αναπηρικό αμαξίδιο",
                            DisabilityAidType = 0
                        },
                        new
                        {
                            Id = 3,
                            Code = "speechComposer",
                            DefaultTitle = "συνθέτη ομιλίας",
                            DisabilityAidType = 1
                        },
                        new
                        {
                            Id = 4,
                            Code = "virtualKeyboard",
                            DefaultTitle = "εικονικό πληκτρολόγιο",
                            DisabilityAidType = 1
                        },
                        new
                        {
                            Id = 5,
                            Code = "switches",
                            DefaultTitle = "διακόπτες",
                            DisabilityAidType = 1
                        },
                        new
                        {
                            Id = 6,
                            Code = "screenReader",
                            DefaultTitle = "αναγνώστη οθόνης",
                            DisabilityAidType = 1
                        },
                        new
                        {
                            Id = 7,
                            Code = "brailleScreen",
                            DefaultTitle = "οθόνη Braille",
                            DisabilityAidType = 1
                        });
                });

            modelBuilder.Entity("Graduation.Core.Data.DisabilityAidLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("DisabilityAidId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DisabilityAidId");

                    b.HasIndex("LanguageId", "DisabilityAidId")
                        .IsUnique();

                    b.ToTable("edu_DisabilityAidLocalizations");
                });

            modelBuilder.Entity("Graduation.Core.Data.ExamAid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultTitle")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("edu_ExamAids");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "oralExams",
                            DefaultTitle = "προφορικές εξετάσεις"
                        },
                        new
                        {
                            Id = 2,
                            Code = "differentQuestions",
                            DefaultTitle = "διαφορετικά θέματα"
                        },
                        new
                        {
                            Id = 3,
                            Code = "braille",
                            DefaultTitle = "με χρήση της γραφής Braille"
                        },
                        new
                        {
                            Id = 4,
                            Code = "computer",
                            DefaultTitle = "με χρήση Η/Υ"
                        });
                });

            modelBuilder.Entity("Graduation.Core.Data.ExamAidLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExamAidid")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExamAidid");

                    b.HasIndex("LanguageId", "ExamAidid")
                        .IsUnique();

                    b.ToTable("edu_ExamAidLocalization");
                });

            modelBuilder.Entity("Graduation.Core.Data.LearningDifficulty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultTitle")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("edu_LearningDifficulties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "teacherSpeech",
                            DefaultTitle = "Τι λέει ο καθηγητής;"
                        },
                        new
                        {
                            Id = 2,
                            Code = "teacherWriting",
                            DefaultTitle = "Τι γράφει στον πίνακα;"
                        },
                        new
                        {
                            Id = 3,
                            Code = "teacherScreen",
                            DefaultTitle = "Τι προβάλει στην οθόνη;"
                        },
                        new
                        {
                            Id = 4,
                            Code = "studentNotes",
                            DefaultTitle = "Συγγραφή σημειώσεων;"
                        },
                        new
                        {
                            Id = 5,
                            Code = "studentQuestions",
                            DefaultTitle = "Διατύπωση αποριών;"
                        });
                });

            modelBuilder.Entity("Graduation.Core.Data.LearningDifficultyLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("LanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LearningDifficultyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LearningDifficultyId");

                    b.HasIndex("LanguageId", "LearningDifficultyId")
                        .IsUnique();

                    b.ToTable("edu_LearningDifficultyLocalizations");
                });

            modelBuilder.Entity("Graduation.Core.Data.PcInputOutputDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultTitle")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("edu_PcInputOutputDevices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "keyboard",
                            DefaultTitle = "Πληκτρολόγιο"
                        },
                        new
                        {
                            Id = 2,
                            Code = "mouse",
                            DefaultTitle = "Ποντίκι"
                        },
                        new
                        {
                            Id = 3,
                            Code = "screen",
                            DefaultTitle = "Οθόνη"
                        },
                        new
                        {
                            Id = 4,
                            Code = "speakers",
                            DefaultTitle = "Ηχεία"
                        });
                });

            modelBuilder.Entity("Graduation.Core.Data.PcInputOutputDeviceLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("LanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PcInputOutputDeviceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PcInputOutputDeviceId");

                    b.HasIndex("LanguageId", "PcInputOutputDeviceId")
                        .IsUnique();

                    b.ToTable("edu_PcInputOutputDeviceLocalizations");
                });

            modelBuilder.Entity("Graduation.Core.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("edu_Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "ice"
                        },
                        new
                        {
                            Id = 2,
                            Code = "eee"
                        },
                        new
                        {
                            Id = 3,
                            Code = "pch"
                        },
                        new
                        {
                            Id = 4,
                            Code = "php"
                        },
                        new
                        {
                            Id = 5,
                            Code = "ecec"
                        },
                        new
                        {
                            Id = 6,
                            Code = "alis"
                        },
                        new
                        {
                            Id = 7,
                            Code = "ba"
                        },
                        new
                        {
                            Id = 8,
                            Code = "tourism"
                        },
                        new
                        {
                            Id = 9,
                            Code = "sw"
                        },
                        new
                        {
                            Id = 10,
                            Code = "accfin"
                        },
                        new
                        {
                            Id = 11,
                            Code = "fst"
                        },
                        new
                        {
                            Id = 12,
                            Code = "wvbs"
                        },
                        new
                        {
                            Id = 13,
                            Code = "bisc"
                        },
                        new
                        {
                            Id = 14,
                            Code = "ot"
                        },
                        new
                        {
                            Id = 15,
                            Code = "midw"
                        },
                        new
                        {
                            Id = 16,
                            Code = "nurs"
                        },
                        new
                        {
                            Id = 17,
                            Code = "phys"
                        },
                        new
                        {
                            Id = 18,
                            Code = "gd"
                        },
                        new
                        {
                            Id = 19,
                            Code = "ia"
                        },
                        new
                        {
                            Id = 20,
                            Code = "cons"
                        },
                        new
                        {
                            Id = 21,
                            Code = "phaa"
                        },
                        new
                        {
                            Id = 22,
                            Code = "bme"
                        },
                        new
                        {
                            Id = 23,
                            Code = "idpe"
                        },
                        new
                        {
                            Id = 24,
                            Code = "geo"
                        },
                        new
                        {
                            Id = 25,
                            Code = "mech"
                        },
                        new
                        {
                            Id = 26,
                            Code = "na"
                        },
                        new
                        {
                            Id = 27,
                            Code = "civ"
                        });
                });

            modelBuilder.Entity("Graduation.Core.DepartmentLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("LanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("DepartmentId", "LanguageId")
                        .IsUnique();

                    b.ToTable("edu_DepartmentLocalizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            LanguageId = 1,
                            Name = "τμήμα μηχανικών πληροφορικής και υπολογιστών"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            LanguageId = 1,
                            Name = "τμήμα ηλεκτρολόγων και ηλεκτρονικών μηχανικών"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 3,
                            LanguageId = 1,
                            Name = "τμήμα δημόσιας και κοινοτικής υγείας"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 4,
                            LanguageId = 1,
                            Name = "τμήμα πολιτικών δημόσιας υγείας"
                        },
                        new
                        {
                            Id = 5,
                            DepartmentId = 5,
                            LanguageId = 1,
                            Name = "τμήμα αγωγής και φροντιδας στην πρώιμη παιδική ηλικία"
                        },
                        new
                        {
                            Id = 6,
                            DepartmentId = 6,
                            LanguageId = 1,
                            Name = "τμήμα αρχειονομίας, βιβλιοθηκονομίας και συστημάτων πληροφόρησης"
                        },
                        new
                        {
                            Id = 7,
                            DepartmentId = 7,
                            LanguageId = 1,
                            Name = "τμήμα διοίκησης επιχειρήσεων"
                        },
                        new
                        {
                            Id = 8,
                            DepartmentId = 8,
                            LanguageId = 1,
                            Name = "τμήμα διοίκησης τουρισμού"
                        },
                        new
                        {
                            Id = 9,
                            DepartmentId = 9,
                            LanguageId = 1,
                            Name = "τμήμα κοινωνικής εργασίας"
                        },
                        new
                        {
                            Id = 10,
                            DepartmentId = 10,
                            LanguageId = 1,
                            Name = "τμήμα λογιστικής και χρηματοοικονομικής"
                        },
                        new
                        {
                            Id = 11,
                            DepartmentId = 11,
                            LanguageId = 1,
                            Name = "τμήμα επιστήμης και τεχνολογίας τροφίμων"
                        },
                        new
                        {
                            Id = 12,
                            DepartmentId = 12,
                            LanguageId = 1,
                            Name = "τμήμα επιστημών οίνου, αμπέλου και ποτών"
                        },
                        new
                        {
                            Id = 13,
                            DepartmentId = 13,
                            LanguageId = 1,
                            Name = "τμήμα βιοϊατρικών επιστημών"
                        },
                        new
                        {
                            Id = 14,
                            DepartmentId = 14,
                            LanguageId = 1,
                            Name = "τμήμα εργοθεραπείας"
                        },
                        new
                        {
                            Id = 15,
                            DepartmentId = 15,
                            LanguageId = 1,
                            Name = "τμήμα μαιευτικής"
                        },
                        new
                        {
                            Id = 16,
                            DepartmentId = 16,
                            LanguageId = 1,
                            Name = "τμήμα νοσηλευτικής"
                        },
                        new
                        {
                            Id = 17,
                            DepartmentId = 17,
                            LanguageId = 1,
                            Name = "τμήμα φυσικοθεραπείας"
                        },
                        new
                        {
                            Id = 18,
                            DepartmentId = 18,
                            LanguageId = 1,
                            Name = "τμήμα γραφιστικής και οπτικής επικοινωνίας"
                        },
                        new
                        {
                            Id = 19,
                            DepartmentId = 19,
                            LanguageId = 1,
                            Name = "τμήμα εσωτερικής αρχιτεκτονικής"
                        },
                        new
                        {
                            Id = 20,
                            DepartmentId = 20,
                            LanguageId = 1,
                            Name = "τμήμα συντήρησης αρχαιοτήτων και έργων τέχνης"
                        },
                        new
                        {
                            Id = 21,
                            DepartmentId = 21,
                            LanguageId = 1,
                            Name = "τμήμα φωτογραφίας και οπτικοακουστικών τεχνών"
                        },
                        new
                        {
                            Id = 22,
                            DepartmentId = 22,
                            LanguageId = 1,
                            Name = "τμήμα μηχανικών βιοϊατρικής"
                        },
                        new
                        {
                            Id = 23,
                            DepartmentId = 23,
                            LanguageId = 1,
                            Name = "τμήμα μηχανικών βιομηχανικής σχεδίασης και παραγωγής"
                        },
                        new
                        {
                            Id = 24,
                            DepartmentId = 24,
                            LanguageId = 1,
                            Name = "τμήμα μηχανικών τοπογραφίας και γεωπληροφορικής"
                        },
                        new
                        {
                            Id = 25,
                            DepartmentId = 25,
                            LanguageId = 1,
                            Name = "τμήμα μηχανολόγων μηχανικών"
                        },
                        new
                        {
                            Id = 26,
                            DepartmentId = 26,
                            LanguageId = 1,
                            Name = "τμήμα ναυπηγών μηχανικών"
                        },
                        new
                        {
                            Id = 27,
                            DepartmentId = 27,
                            LanguageId = 1,
                            Name = "τμήμα πολιτικών μηχανικών"
                        });
                });

            modelBuilder.Entity("Graduation.Core.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("sys_Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "el",
                            Name = "Greek"
                        },
                        new
                        {
                            Id = 2,
                            Code = "ab",
                            Name = "Abkhazian"
                        },
                        new
                        {
                            Id = 3,
                            Code = "aa",
                            Name = "Afar"
                        },
                        new
                        {
                            Id = 4,
                            Code = "af",
                            Name = "Afrikaans"
                        },
                        new
                        {
                            Id = 5,
                            Code = "ak",
                            Name = "Akan"
                        },
                        new
                        {
                            Id = 6,
                            Code = "sq",
                            Name = "Albanian"
                        },
                        new
                        {
                            Id = 7,
                            Code = "am",
                            Name = "Amharic"
                        },
                        new
                        {
                            Id = 8,
                            Code = "ar",
                            Name = "Arabic"
                        },
                        new
                        {
                            Id = 9,
                            Code = "an",
                            Name = "Aragonese"
                        },
                        new
                        {
                            Id = 10,
                            Code = "hy",
                            Name = "Armenian"
                        },
                        new
                        {
                            Id = 11,
                            Code = "as",
                            Name = "Assamese"
                        },
                        new
                        {
                            Id = 12,
                            Code = "av",
                            Name = "Avaric"
                        },
                        new
                        {
                            Id = 13,
                            Code = "ae",
                            Name = "Avestan"
                        },
                        new
                        {
                            Id = 14,
                            Code = "ay",
                            Name = "Aymara"
                        },
                        new
                        {
                            Id = 15,
                            Code = "az",
                            Name = "Azerbaijani"
                        },
                        new
                        {
                            Id = 16,
                            Code = "bm",
                            Name = "Bambara"
                        },
                        new
                        {
                            Id = 17,
                            Code = "ba",
                            Name = "Bashkir"
                        },
                        new
                        {
                            Id = 18,
                            Code = "eu",
                            Name = "Basque"
                        },
                        new
                        {
                            Id = 19,
                            Code = "be",
                            Name = "Belarusian"
                        },
                        new
                        {
                            Id = 20,
                            Code = "bn",
                            Name = "Bengali"
                        },
                        new
                        {
                            Id = 21,
                            Code = "bh",
                            Name = "Bihari languages"
                        },
                        new
                        {
                            Id = 22,
                            Code = "bi",
                            Name = "Bislama"
                        },
                        new
                        {
                            Id = 24,
                            Code = "bs",
                            Name = "Bosnian"
                        },
                        new
                        {
                            Id = 25,
                            Code = "br",
                            Name = "Breton"
                        },
                        new
                        {
                            Id = 26,
                            Code = "bg",
                            Name = "Bulgarian"
                        },
                        new
                        {
                            Id = 27,
                            Code = "my",
                            Name = "Burmese"
                        },
                        new
                        {
                            Id = 29,
                            Code = "ca",
                            Name = "Catalan"
                        },
                        new
                        {
                            Id = 30,
                            Code = "km",
                            Name = "Central Khmer"
                        },
                        new
                        {
                            Id = 31,
                            Code = "ch",
                            Name = "Chamorro"
                        },
                        new
                        {
                            Id = 32,
                            Code = "ce",
                            Name = "Chechen"
                        },
                        new
                        {
                            Id = 33,
                            Code = "ny",
                            Name = "Chewa"
                        },
                        new
                        {
                            Id = 35,
                            Code = "zh",
                            Name = "Chinese"
                        },
                        new
                        {
                            Id = 37,
                            Code = "cu",
                            Name = "Church Slavic"
                        },
                        new
                        {
                            Id = 39,
                            Code = "cv",
                            Name = "Chuvash"
                        },
                        new
                        {
                            Id = 40,
                            Code = "kw",
                            Name = "Cornish"
                        },
                        new
                        {
                            Id = 41,
                            Code = "co",
                            Name = "Corsican"
                        },
                        new
                        {
                            Id = 42,
                            Code = "cr",
                            Name = "Cree"
                        },
                        new
                        {
                            Id = 43,
                            Code = "hr",
                            Name = "Croatian"
                        },
                        new
                        {
                            Id = 44,
                            Code = "cs",
                            Name = "Czech"
                        },
                        new
                        {
                            Id = 45,
                            Code = "da",
                            Name = "Danish"
                        },
                        new
                        {
                            Id = 48,
                            Code = "nl",
                            Name = "Dutch"
                        },
                        new
                        {
                            Id = 49,
                            Code = "dz",
                            Name = "Dzongkha"
                        },
                        new
                        {
                            Id = 50,
                            Code = "en",
                            Name = "English"
                        },
                        new
                        {
                            Id = 51,
                            Code = "eo",
                            Name = "Esperanto"
                        },
                        new
                        {
                            Id = 52,
                            Code = "et",
                            Name = "Estonian"
                        },
                        new
                        {
                            Id = 53,
                            Code = "ee",
                            Name = "Ewe"
                        },
                        new
                        {
                            Id = 54,
                            Code = "fo",
                            Name = "Faroese"
                        },
                        new
                        {
                            Id = 55,
                            Code = "fj",
                            Name = "Fijian"
                        },
                        new
                        {
                            Id = 56,
                            Code = "fi",
                            Name = "Finnish"
                        },
                        new
                        {
                            Id = 58,
                            Code = "fr",
                            Name = "French"
                        },
                        new
                        {
                            Id = 59,
                            Code = "ff",
                            Name = "Fulah"
                        },
                        new
                        {
                            Id = 60,
                            Code = "gd",
                            Name = "Gaelic"
                        },
                        new
                        {
                            Id = 61,
                            Code = "gl",
                            Name = "Galician"
                        },
                        new
                        {
                            Id = 62,
                            Code = "lg",
                            Name = "Ganda"
                        },
                        new
                        {
                            Id = 63,
                            Code = "ka",
                            Name = "Georgian"
                        },
                        new
                        {
                            Id = 64,
                            Code = "de",
                            Name = "German"
                        },
                        new
                        {
                            Id = 66,
                            Code = "kl",
                            Name = "Greenlandic"
                        },
                        new
                        {
                            Id = 67,
                            Code = "gn",
                            Name = "Guarani"
                        },
                        new
                        {
                            Id = 68,
                            Code = "gu",
                            Name = "Gujarati"
                        },
                        new
                        {
                            Id = 69,
                            Code = "ht",
                            Name = "Haitian"
                        },
                        new
                        {
                            Id = 71,
                            Code = "ha",
                            Name = "Hausa"
                        },
                        new
                        {
                            Id = 72,
                            Code = "he",
                            Name = "Hebrew"
                        },
                        new
                        {
                            Id = 73,
                            Code = "hz",
                            Name = "Herero"
                        },
                        new
                        {
                            Id = 74,
                            Code = "hi",
                            Name = "Hindi"
                        },
                        new
                        {
                            Id = 75,
                            Code = "ho",
                            Name = "Hiri Motu"
                        },
                        new
                        {
                            Id = 76,
                            Code = "hu",
                            Name = "Hungarian"
                        },
                        new
                        {
                            Id = 77,
                            Code = "is",
                            Name = "Icelandic"
                        },
                        new
                        {
                            Id = 78,
                            Code = "io",
                            Name = "Ido"
                        },
                        new
                        {
                            Id = 79,
                            Code = "ig",
                            Name = "Igbo"
                        },
                        new
                        {
                            Id = 80,
                            Code = "id",
                            Name = "Indonesian"
                        },
                        new
                        {
                            Id = 81,
                            Code = "ia",
                            Name = "Interlingua (International Auxiliary Language Association)"
                        },
                        new
                        {
                            Id = 82,
                            Code = "ie",
                            Name = "Interlingue"
                        },
                        new
                        {
                            Id = 83,
                            Code = "iu",
                            Name = "Inuktitut"
                        },
                        new
                        {
                            Id = 84,
                            Code = "ik",
                            Name = "Inupiaq"
                        },
                        new
                        {
                            Id = 85,
                            Code = "ga",
                            Name = "Irish"
                        },
                        new
                        {
                            Id = 86,
                            Code = "it",
                            Name = "Italian"
                        },
                        new
                        {
                            Id = 87,
                            Code = "ja",
                            Name = "Japanese"
                        },
                        new
                        {
                            Id = 88,
                            Code = "jv",
                            Name = "Javanese"
                        },
                        new
                        {
                            Id = 90,
                            Code = "kn",
                            Name = "Kannada"
                        },
                        new
                        {
                            Id = 91,
                            Code = "kr",
                            Name = "Kanuri"
                        },
                        new
                        {
                            Id = 92,
                            Code = "ks",
                            Name = "Kashmiri"
                        },
                        new
                        {
                            Id = 93,
                            Code = "kk",
                            Name = "Kazakh"
                        },
                        new
                        {
                            Id = 94,
                            Code = "ki",
                            Name = "Kikuyu"
                        },
                        new
                        {
                            Id = 95,
                            Code = "rw",
                            Name = "Kinyarwanda"
                        },
                        new
                        {
                            Id = 97,
                            Code = "kv",
                            Name = "Komi"
                        },
                        new
                        {
                            Id = 98,
                            Code = "kg",
                            Name = "Kongo"
                        },
                        new
                        {
                            Id = 99,
                            Code = "ko",
                            Name = "Korean"
                        },
                        new
                        {
                            Id = 101,
                            Code = "ku",
                            Name = "Kurdish"
                        },
                        new
                        {
                            Id = 102,
                            Code = "kj",
                            Name = "Kwanyama"
                        },
                        new
                        {
                            Id = 103,
                            Code = "ky",
                            Name = "Kyrgyz"
                        },
                        new
                        {
                            Id = 104,
                            Code = "lo",
                            Name = "Lao"
                        },
                        new
                        {
                            Id = 105,
                            Code = "la",
                            Name = "Latin"
                        },
                        new
                        {
                            Id = 106,
                            Code = "lv",
                            Name = "Latvian"
                        },
                        new
                        {
                            Id = 108,
                            Code = "li",
                            Name = "Limburgan"
                        },
                        new
                        {
                            Id = 111,
                            Code = "ln",
                            Name = "Lingala"
                        },
                        new
                        {
                            Id = 112,
                            Code = "lt",
                            Name = "Lithuanian"
                        },
                        new
                        {
                            Id = 113,
                            Code = "lu",
                            Name = "Luba-Katanga"
                        },
                        new
                        {
                            Id = 114,
                            Code = "lb",
                            Name = "Luxembourgish"
                        },
                        new
                        {
                            Id = 115,
                            Code = "mk",
                            Name = "Macedonian"
                        },
                        new
                        {
                            Id = 116,
                            Code = "mg",
                            Name = "Malagasy"
                        },
                        new
                        {
                            Id = 117,
                            Code = "ms",
                            Name = "Malay"
                        },
                        new
                        {
                            Id = 118,
                            Code = "ml",
                            Name = "Malayalam"
                        },
                        new
                        {
                            Id = 119,
                            Code = "dv",
                            Name = "Maldivian"
                        },
                        new
                        {
                            Id = 120,
                            Code = "mt",
                            Name = "Maltese"
                        },
                        new
                        {
                            Id = 121,
                            Code = "gv",
                            Name = "Manx"
                        },
                        new
                        {
                            Id = 122,
                            Code = "mi",
                            Name = "Maori"
                        },
                        new
                        {
                            Id = 123,
                            Code = "mr",
                            Name = "Marathi"
                        },
                        new
                        {
                            Id = 124,
                            Code = "mh",
                            Name = "Marshallese"
                        },
                        new
                        {
                            Id = 127,
                            Code = "mn",
                            Name = "Mongolian"
                        },
                        new
                        {
                            Id = 128,
                            Code = "na",
                            Name = "Nauru"
                        },
                        new
                        {
                            Id = 130,
                            Code = "nv",
                            Name = "Navajo"
                        },
                        new
                        {
                            Id = 133,
                            Code = "ng",
                            Name = "Ndonga"
                        },
                        new
                        {
                            Id = 134,
                            Code = "ne",
                            Name = "Nepali"
                        },
                        new
                        {
                            Id = 135,
                            Code = "nd",
                            Name = "North Ndebele"
                        },
                        new
                        {
                            Id = 136,
                            Code = "se",
                            Name = "Northern Sami"
                        },
                        new
                        {
                            Id = 137,
                            Code = "no",
                            Name = "Norwegian"
                        },
                        new
                        {
                            Id = 138,
                            Code = "nb",
                            Name = "Norwegian Bokmål"
                        },
                        new
                        {
                            Id = 139,
                            Code = "nn",
                            Name = "Norwegian Nynorsk"
                        },
                        new
                        {
                            Id = 140,
                            Code = "ii",
                            Name = "Nuosu"
                        },
                        new
                        {
                            Id = 144,
                            Code = "oc",
                            Name = "Occitan (post 1500)"
                        },
                        new
                        {
                            Id = 145,
                            Code = "oj",
                            Name = "Ojibwa"
                        },
                        new
                        {
                            Id = 149,
                            Code = "or",
                            Name = "Oriya"
                        },
                        new
                        {
                            Id = 150,
                            Code = "om",
                            Name = "Oromo"
                        },
                        new
                        {
                            Id = 151,
                            Code = "os",
                            Name = "Ossetian"
                        },
                        new
                        {
                            Id = 153,
                            Code = "pi",
                            Name = "Pali"
                        },
                        new
                        {
                            Id = 155,
                            Code = "ps",
                            Name = "Pashto"
                        },
                        new
                        {
                            Id = 156,
                            Code = "fa",
                            Name = "Persian"
                        },
                        new
                        {
                            Id = 157,
                            Code = "pl",
                            Name = "Polish"
                        },
                        new
                        {
                            Id = 158,
                            Code = "pt",
                            Name = "Portuguese"
                        },
                        new
                        {
                            Id = 159,
                            Code = "pa",
                            Name = "Punjabi"
                        },
                        new
                        {
                            Id = 161,
                            Code = "qu",
                            Name = "Quechua"
                        },
                        new
                        {
                            Id = 162,
                            Code = "ro",
                            Name = "Romanian"
                        },
                        new
                        {
                            Id = 163,
                            Code = "rm",
                            Name = "Romansh"
                        },
                        new
                        {
                            Id = 164,
                            Code = "rn",
                            Name = "Rundi"
                        },
                        new
                        {
                            Id = 165,
                            Code = "ru",
                            Name = "Russian"
                        },
                        new
                        {
                            Id = 166,
                            Code = "sm",
                            Name = "Samoan"
                        },
                        new
                        {
                            Id = 167,
                            Code = "sg",
                            Name = "Sango"
                        },
                        new
                        {
                            Id = 168,
                            Code = "sa",
                            Name = "Sanskrit"
                        },
                        new
                        {
                            Id = 169,
                            Code = "sc",
                            Name = "Sardinian"
                        },
                        new
                        {
                            Id = 171,
                            Code = "sr",
                            Name = "Serbian"
                        },
                        new
                        {
                            Id = 172,
                            Code = "sn",
                            Name = "Shona"
                        },
                        new
                        {
                            Id = 174,
                            Code = "sd",
                            Name = "Sindhi"
                        },
                        new
                        {
                            Id = 175,
                            Code = "si",
                            Name = "Sinhala"
                        },
                        new
                        {
                            Id = 177,
                            Code = "sk",
                            Name = "Slovak"
                        },
                        new
                        {
                            Id = 178,
                            Code = "sl",
                            Name = "Slovenian"
                        },
                        new
                        {
                            Id = 179,
                            Code = "so",
                            Name = "Somali"
                        },
                        new
                        {
                            Id = 180,
                            Code = "st",
                            Name = "Sotho, Southern"
                        },
                        new
                        {
                            Id = 181,
                            Code = "nr",
                            Name = "South Ndebele"
                        },
                        new
                        {
                            Id = 182,
                            Code = "es",
                            Name = "Spanish"
                        },
                        new
                        {
                            Id = 183,
                            Code = "su",
                            Name = "Sundanese"
                        },
                        new
                        {
                            Id = 184,
                            Code = "sw",
                            Name = "Swahili"
                        },
                        new
                        {
                            Id = 185,
                            Code = "ss",
                            Name = "Swati"
                        },
                        new
                        {
                            Id = 186,
                            Code = "sv",
                            Name = "Swedish"
                        },
                        new
                        {
                            Id = 187,
                            Code = "tl",
                            Name = "Tagalog"
                        },
                        new
                        {
                            Id = 188,
                            Code = "ty",
                            Name = "Tahitian"
                        },
                        new
                        {
                            Id = 189,
                            Code = "tg",
                            Name = "Tajik"
                        },
                        new
                        {
                            Id = 190,
                            Code = "ta",
                            Name = "Tamil"
                        },
                        new
                        {
                            Id = 191,
                            Code = "tt",
                            Name = "Tatar"
                        },
                        new
                        {
                            Id = 192,
                            Code = "te",
                            Name = "Telugu"
                        },
                        new
                        {
                            Id = 193,
                            Code = "th",
                            Name = "Thai"
                        },
                        new
                        {
                            Id = 194,
                            Code = "bo",
                            Name = "Tibetan"
                        },
                        new
                        {
                            Id = 195,
                            Code = "ti",
                            Name = "Tigrinya"
                        },
                        new
                        {
                            Id = 196,
                            Code = "to",
                            Name = "Tonga (Tonga Islands)"
                        },
                        new
                        {
                            Id = 197,
                            Code = "ts",
                            Name = "Tsonga"
                        },
                        new
                        {
                            Id = 198,
                            Code = "tn",
                            Name = "Tswana"
                        },
                        new
                        {
                            Id = 199,
                            Code = "tr",
                            Name = "Turkish"
                        },
                        new
                        {
                            Id = 200,
                            Code = "tk",
                            Name = "Turkmen"
                        },
                        new
                        {
                            Id = 201,
                            Code = "tw",
                            Name = "Twi"
                        },
                        new
                        {
                            Id = 203,
                            Code = "uk",
                            Name = "Ukrainian"
                        },
                        new
                        {
                            Id = 204,
                            Code = "ur",
                            Name = "Urdu"
                        },
                        new
                        {
                            Id = 205,
                            Code = "ug",
                            Name = "Uyghur"
                        },
                        new
                        {
                            Id = 206,
                            Code = "uz",
                            Name = "Uzbek"
                        },
                        new
                        {
                            Id = 208,
                            Code = "ve",
                            Name = "Venda"
                        },
                        new
                        {
                            Id = 209,
                            Code = "vi",
                            Name = "Vietnamese"
                        },
                        new
                        {
                            Id = 210,
                            Code = "vo",
                            Name = "Volapük"
                        },
                        new
                        {
                            Id = 211,
                            Code = "wa",
                            Name = "Walloon"
                        },
                        new
                        {
                            Id = 212,
                            Code = "cy",
                            Name = "Welsh"
                        },
                        new
                        {
                            Id = 213,
                            Code = "fy",
                            Name = "Western Frisian"
                        },
                        new
                        {
                            Id = 214,
                            Code = "wo",
                            Name = "Wolof"
                        },
                        new
                        {
                            Id = 215,
                            Code = "xh",
                            Name = "Xhosa"
                        },
                        new
                        {
                            Id = 216,
                            Code = "yi",
                            Name = "Yiddish"
                        },
                        new
                        {
                            Id = 217,
                            Code = "yo",
                            Name = "Yoruba"
                        },
                        new
                        {
                            Id = 218,
                            Code = "za",
                            Name = "Zhuang"
                        },
                        new
                        {
                            Id = 219,
                            Code = "zu",
                            Name = "Zulu"
                        });
                });

            modelBuilder.Entity("Graduation.Core.LocalizedResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Key")
                        .HasColumnType("TEXT");

                    b.Property<int>("LanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId", "Key")
                        .IsUnique();

                    b.ToTable("sys_LocalizedResources");
                });

            modelBuilder.Entity("Graduation.Core.OperationalDifficulty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultTitle")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("edu_OperationalDifficulties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "library",
                            DefaultTitle = "Βιβλιοθήκη"
                        },
                        new
                        {
                            Id = 2,
                            Code = "wc",
                            DefaultTitle = "Τουαλέτες"
                        },
                        new
                        {
                            Id = 3,
                            Code = "elevator",
                            DefaultTitle = "Ανελκυστήρες"
                        },
                        new
                        {
                            Id = 4,
                            Code = "classroom",
                            DefaultTitle = "Αίθουσες Διδασκαλίας"
                        },
                        new
                        {
                            Id = 5,
                            Code = "amphitheater",
                            DefaultTitle = "Αμφιθέατρα"
                        },
                        new
                        {
                            Id = 6,
                            Code = "laboratory",
                            DefaultTitle = "Εργαστήρια"
                        },
                        new
                        {
                            Id = 7,
                            Code = "secretary",
                            DefaultTitle = "Γραμματεία"
                        },
                        new
                        {
                            Id = 8,
                            Code = "canteen",
                            DefaultTitle = "Κυλικείο"
                        },
                        new
                        {
                            Id = 9,
                            Code = "orientation",
                            DefaultTitle = "Προσανατολισμός στους χώρους του κτιρίου"
                        });
                });

            modelBuilder.Entity("Graduation.Core.OperationalDifficultyLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("LanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OperationalDifficultyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OperationalDifficultyId");

                    b.HasIndex("LanguageId", "OperationalDifficultyId")
                        .IsUnique();

                    b.ToTable("edu_OperationalDifficultyLocalizations");
                });

            modelBuilder.Entity("Graduation.Core.QualificationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DefaultName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("edu_QualificationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DefaultName = "Πανελλήνιες Εξετάσεις"
                        },
                        new
                        {
                            Id = 2,
                            DefaultName = "Με τον ειδικό νόμο (3%) για ΑμεΑ"
                        },
                        new
                        {
                            Id = 3,
                            DefaultName = "Ομογενείς"
                        },
                        new
                        {
                            Id = 4,
                            DefaultName = "Μετεγγραφή"
                        },
                        new
                        {
                            Id = 5,
                            DefaultName = "Ειδικές Εξετάσεις"
                        });
                });

            modelBuilder.Entity("Graduation.Core.QualificationTypeLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LanguageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("QualificationTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("QualificationTypeId");

                    b.HasIndex("LanguageId", "QualificationTypeId")
                        .IsUnique();

                    b.ToTable("edu_QualificationTypeLocalizations");
                });

            modelBuilder.Entity("Graduation.Core.AbilityLocalization", b =>
                {
                    b.HasOne("Graduation.Core.Ability", "Ability")
                        .WithMany("AbilityLocalizations")
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation.Core.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Graduation.Core.Data.DisabilityAidLocalization", b =>
                {
                    b.HasOne("Graduation.Core.Data.DisabilityAid", "DisabilityAid")
                        .WithMany("DisabilityAidLocalizations")
                        .HasForeignKey("DisabilityAidId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation.Core.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DisabilityAid");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Graduation.Core.Data.ExamAidLocalization", b =>
                {
                    b.HasOne("Graduation.Core.Data.ExamAid", "ExamAid")
                        .WithMany("ExamAidLocalizations")
                        .HasForeignKey("ExamAidid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation.Core.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExamAid");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Graduation.Core.Data.LearningDifficultyLocalization", b =>
                {
                    b.HasOne("Graduation.Core.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation.Core.Data.LearningDifficulty", "LearningDifficulty")
                        .WithMany("LearningDifficultyLocalizations")
                        .HasForeignKey("LearningDifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("LearningDifficulty");
                });

            modelBuilder.Entity("Graduation.Core.Data.PcInputOutputDeviceLocalization", b =>
                {
                    b.HasOne("Graduation.Core.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation.Core.Data.PcInputOutputDevice", "PcInputOutputDevice")
                        .WithMany("PcInputOutputDeviceLocalizations")
                        .HasForeignKey("PcInputOutputDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("PcInputOutputDevice");
                });

            modelBuilder.Entity("Graduation.Core.DepartmentLocalization", b =>
                {
                    b.HasOne("Graduation.Core.Department", "Department")
                        .WithMany("DepartmentLocalizations")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation.Core.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Graduation.Core.LocalizedResource", b =>
                {
                    b.HasOne("Graduation.Core.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Graduation.Core.OperationalDifficultyLocalization", b =>
                {
                    b.HasOne("Graduation.Core.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation.Core.OperationalDifficulty", "OperationalDifficulty")
                        .WithMany("OperationalDifficultyLocalizations")
                        .HasForeignKey("OperationalDifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("OperationalDifficulty");
                });

            modelBuilder.Entity("Graduation.Core.QualificationTypeLocalization", b =>
                {
                    b.HasOne("Graduation.Core.Language", "Language")
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Graduation.Core.QualificationType", "QualificationType")
                        .WithMany("QualificationTypeLocalizations")
                        .HasForeignKey("QualificationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("QualificationType");
                });

            modelBuilder.Entity("Graduation.Core.Ability", b =>
                {
                    b.Navigation("AbilityLocalizations");
                });

            modelBuilder.Entity("Graduation.Core.Data.DisabilityAid", b =>
                {
                    b.Navigation("DisabilityAidLocalizations");
                });

            modelBuilder.Entity("Graduation.Core.Data.ExamAid", b =>
                {
                    b.Navigation("ExamAidLocalizations");
                });

            modelBuilder.Entity("Graduation.Core.Data.LearningDifficulty", b =>
                {
                    b.Navigation("LearningDifficultyLocalizations");
                });

            modelBuilder.Entity("Graduation.Core.Data.PcInputOutputDevice", b =>
                {
                    b.Navigation("PcInputOutputDeviceLocalizations");
                });

            modelBuilder.Entity("Graduation.Core.Department", b =>
                {
                    b.Navigation("DepartmentLocalizations");
                });

            modelBuilder.Entity("Graduation.Core.OperationalDifficulty", b =>
                {
                    b.Navigation("OperationalDifficultyLocalizations");
                });

            modelBuilder.Entity("Graduation.Core.QualificationType", b =>
                {
                    b.Navigation("QualificationTypeLocalizations");
                });
#pragma warning restore 612, 618
        }
    }
}
